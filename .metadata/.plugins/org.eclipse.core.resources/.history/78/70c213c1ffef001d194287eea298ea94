package controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class FrontController
 */
@WebServlet("*.do")
public class FrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public FrontController() {
        super();
    }

	/**
	 * @see HttpServlet#service(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String path = request.getRequestURI().substring(request.getContextPath().length());
		CommonControllerInterface controller = null;
		Map<String, Object> data = new HashMap<>();
		
		data.put("method", request.getMethod());
		data.put("request", request);
		data.put("response", response);
		
		System.out.println("--- "+path);
		
		switch(path) {
			case "/login/signin.do": {
				controller = new SigninController(); break;
			}
			case "/login/menu.do":{
				controller = new MenuController(); break;
			}
			case "/equi/equiList.do":{
				controller = new EquiListController(); break;
			}
			case "/equi/rentalPossibleEquipment.do":{
				controller = new rentalPossibleEquipmentController(); break;
			}
			case "/equi/usingEquipment.do":{
				controller = new usingEquipmentController(); break;
			}
			case "/equi/allEquipmentType.do":{
				controller = new allEquipmentTypeController(); break;
			}
			case "/equi/searchEquipmentByType.do":{
				controller = new searchEquipmentByTypeController(); break;
			}
			case "/equi/allEquipmentModel.do":{
				controller = new allEquipmentModelController(); break;
			}
			case "/equi/searchEquipmentByModel.do":{
				controller = new searchEquipmentByModelController(); break;
			}
			
			case "/emp/empList.do":{
				controller = new EmpListController(); break;
			}
			default: break;
		}
		
		String page = null;
		try {
			page = controller.execute(data);
		} catch(Exception e) {
			e.printStackTrace();
		}
		
		System.out.println(page + " > page");
		if(page.indexOf("redirect:") >= 0) {
			response.sendRedirect(page.substring(9));
		}else if(page.indexOf("responseBody:") >= 0) {
			response.setCharacterEncoding("UTF-8");
			response.getWriter().append(page.substring(13));
		}else {
			RequestDispatcher rd;
			rd = request.getRequestDispatcher(page);
			rd.forward(request, response);
		}
	}

}
